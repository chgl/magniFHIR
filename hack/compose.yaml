services:
  traefik:
    image: docker.io/library/traefik:v2.10.7@sha256:c5181ddf303f1ccfd4bd6d1d9c4867b0500efb6089a0f9ccb16612438f6e934f
    restart: unless-stopped
    ipc: none
    security_opt:
      - "no-new-privileges:true"
    cap_drop:
      - ALL
    read_only: true
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "127.0.0.1:80:80"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    deploy:
      resources:
        limits:
          memory: 128m

  hapi-fhir-server:
    image: index.docker.io/hapiproject/hapi:v6.10.1@sha256:4eac1b3481180b028616d1fab7e657e368538063d75f7ed3be2032e34c657dd4
    restart: unless-stopped
    cap_drop:
      - ALL
    ipc: none
    security_opt:
      - "no-new-privileges:true"
    deploy:
      resources:
        limits:
          memory: 2048m
    read_only: true
    tmpfs:
      - /tmp
      - /app/target
    privileged: false
    environment:
      SPRING_DATASOURCE_URL: "jdbc:postgresql://hapi-fhir-db:5432/fhir?currentSchema=public"
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_DATASOURCE_DRIVERCLASSNAME: org.postgresql.Driver
      spring.jpa.properties.hibernate.dialect: ca.uhn.fhir.jpa.model.dialect.HapiFhirPostgres94Dialect
      HAPI_FHIR_VALIDATION_REQUESTS_ENABLED: "false"
      HAPI_FHIR_USE_APACHE_ADDRESS_STRATEGY: "true"
      HAPI_FHIR_ENFORCE_REFERENTIAL_INTEGRITY_ON_DELETE: "false"
      HAPI_FHIR_ENFORCE_REFERENTIAL_INTEGRITY_ON_WRITE: "false"
      HAPI_FHIR_SUBSCRIPTION_RESTHOOK_ENABLED: "true"
      HAPI_FHIR_ALLOW_MULTIPLE_DELETE: "true"
      JAVA_TOOL_OPTIONS: "-javaagent:/app/opentelemetry-javaagent.jar"
      OTEL_TRACES_EXPORTER: "jaeger"
      OTEL_METRICS_EXPORTER: "none"
      OTEL_LOGS_EXPORTER: "none"
      OTEL_SERVICE_NAME: "hapi-fhir-server"
      OTEL_EXPORTER_JAEGER_ENDPOINT: "http://jaeger:14250"
    depends_on:
      - hapi-fhir-db
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.fhir.loadbalancer.server.port=8080"
      - "traefik.http.routers.fhir.rule=Host(`hapi-fhir-server.127.0.0.1.nip.io`)"
      - "traefik.http.routers.fhir.entrypoints=web"

  hapi-fhir-db:
    image: index.docker.io/library/postgres:15.5@sha256:11019308d1b8c73d225f1c3b8ddcb1380d5957e7b934ef27050b1f91c8859ce2
    restart: unless-stopped
    ipc: private
    security_opt:
      - "no-new-privileges:true"
    privileged: false
    shm_size: 1024m
    deploy:
      resources:
        limits:
          memory: 1536m
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fhir

  loader:
    image: index.docker.io/curlimages/curl:7.88.1@sha256:48318407b8d98e8c7d5bd4741c88e8e1a5442de660b47f63ba656e5c910bc3da
    environment:
      FHIR_SERVER_BASE_URL: "http://hapi-fhir-server:8080/fhir"
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        for fhir_file in /data/*.json; do
          echo "Uploading $${fhir_file} to $${FHIR_SERVER_BASE_URL}"
          curl -X POST \
               -H 'Content-Type: application/fhir+json' \
               --retry-connrefuse \
               --connect-timeout 30 \
               --max-time 60 \
               --retry 5 \
               --retry-delay 15 \
               --data "@$${fhir_file}" \
               $${FHIR_SERVER_BASE_URL}
        done;
    volumes:
      - ./fhir:/data:ro
    depends_on:
      - hapi-fhir-server

  l4h-fhir-db:
    image: docker.io/library/postgres:14.10@sha256:34f4ee87fed96f254c4970e6a348c24b24b4f05ebb0880e29c8d15a5cde4e763
    restart: unless-stopped
    profiles:
      - l4h
    ipc: private
    security_opt:
      - "no-new-privileges:true"
    privileged: false
    shm_size: 1024m
    deploy:
      resources:
        limits:
          memory: 1536m
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fhir

  fhir-schematool:
    image: ghcr.io/linuxforhealth/fhir-schematool:5.1.1@sha256:374d9ef0e8245f5925989591a4806d1b53b260f20d1a9ed7d067cb0fc58bfd86
    restart: on-failure
    profiles:
      - l4h
    cap_drop:
      - ALL
    ipc: none
    security_opt:
      - "no-new-privileges:true"
    privileged: false
    environment:
      ENV_SKIP: "false" # Set to true if you want to manage postgres schema yourself (or once schema is initialized)
    command: --tool.behavior=onboard --db.type=postgresql --db.host=l4h-fhir-db --db.port=5432 --db.database=fhir --sslConnection=false --grant.to=postgres --user=postgres --password=postgres
    depends_on:
      - l4h-fhir-db

  l4h-fhir-server:
    image: ghcr.io/linuxforhealth/fhir-server:5.1.1@sha256:1b180a91b18dc64c6dea78df332a124fd46d481cc281cb93c7e6a532516b99cd
    restart: unless-stopped
    profiles:
      - l4h
    cap_drop:
      - ALL
    ipc: none
    security_opt:
      - "no-new-privileges:true"
    privileged: false
    volumes:
      - ./l4h-config/fhir-server-config.json:/opt/ol/wlp/usr/servers/defaultServer/config/default/fhir-server-config.json:ro
      - ./l4h-config/overrides:/opt/ol/wlp/usr/servers/defaultServer/configDropins/overrides:ro
    environment:
      FHIR_USER_PASSWORD: change-user-password
      FHIR_ADMIN_PASSWORD: change-admin-password
    depends_on:
      - l4h-fhir-db
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.l4h-fhir.loadbalancer.server.port=9080"
      - "traefik.http.routers.l4h-fhir.rule=Host(`l4h-fhir-server.127.0.0.1.nip.io`)"
      - "traefik.http.routers.l4h-fhir.entrypoints=web"

  fhir-server-for-azure:
    image: mcr.microsoft.com/healthcareapis/r4-fhir-server:3.4.361@sha256:4d48030fbbd69f8ac5418c222e515bb1b0d00e85bfdc89ce6b461f3fe7c2d4d6
    restart: unless-stopped
    profiles:
      - azure
    cap_drop:
      - ALL
    ipc: none
    security_opt:
      - "no-new-privileges:true"
    privileged: false
    environment:
      FHIRServer__Security__Enabled: "false"
      SqlServer__ConnectionString: "Server=tcp:fhir-server-for-azure-mssql-db,1433;Initial Catalog=FHIR;Persist Security Info=False;User ID=sa;Password=37e9211d1b3!017c2d457e4c3d_f69947bdaab16806ea215ad;MultipleActiveResultSets=False;Connection Timeout=30;TrustServerCertificate=true;"
      SqlServer__AllowDatabaseCreation: "true"
      SqlServer__Initialize: "true"
      SqlServer__SchemaOptions__AutomaticUpdatesEnabled: "true"
      DataStore: "SqlServer"
    depends_on:
      - fhir-server-for-azure-mssql-db
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.azure-fhir.loadbalancer.server.port=8080"
      - "traefik.http.routers.azure-fhir.rule=Host(`azure-fhir-server.127.0.0.1.nip.io`)"
      - "traefik.http.routers.azure-fhir.entrypoints=web"

  fhir-server-for-azure-mssql-db:
    image: mcr.microsoft.com/mssql/server:2022-latest@sha256:ffef32dda16cc5abd70db1d0654c01cbe9f7093d66e0c83ade20738156cb7d0e
    restart: unless-stopped
    profiles:
      - azure
    ipc: private
    security_opt:
      - "no-new-privileges:true"
    privileged: false
    environment:
      SA_PASSWORD: 37e9211d1b3!017c2d457e4c3d_f69947bdaab16806ea215ad
      ACCEPT_EULA: "Y"

  jaeger:
    image: docker.io/jaegertracing/all-in-one:1.52@sha256:7885400a153ac908d8bfbf72c27e3389dbab1942a35dd0ce3228611dc48cbf9f
    restart: unless-stopped
    cap_drop:
      - ALL
    ipc: none
    security_opt:
      - "no-new-privileges:true"
    privileged: false
    ports:
      - 6831:6831/udp
      - 6832:6832/udp
      - 4317:4317/tcp
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.jaeger.loadbalancer.server.port=16686"
      - "traefik.http.routers.jaeger.rule=Host(`jaeger.127.0.0.1.nip.io`)"
      - "traefik.http.routers.jaeger.entrypoints=web"

  keycloak:
    image: quay.io/keycloak/keycloak:21.1.2@sha256:3408c186dde4a95c2b99ef1290721bf1d253d64ba3a1de0a46c667b8288051f0
    restart: unless-stopped
    ipc: none
    security_opt:
      - "no-new-privileges:true"
    cap_drop:
      - ALL
    privileged: false
    deploy:
      resources:
        limits:
          memory: 2048m
    command:
      - start-dev
      - --import-realm
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    volumes:
      - type: bind
        source: ./keycloak/magnifhir-realm-export.json
        target: /opt/keycloak/data/import/magnifhir-realm-export.json
        read_only: true
    ports:
      - 127.0.0.1:8083:8080
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"
      - "traefik.http.routers.keycloak.rule=Host(`auth.127.0.0.1.nip.io`)"
      - "traefik.http.routers.keycloak.entrypoints=web"
