@page "/servers/{fhirServerNameSlug}/browser"
@using Hl7.Fhir.Model
@using magniFHIR.Data
@inject IFhirService FhirService
@inject NavigationManager NavManager

<PageTitle>Patient Browser</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Patient Browser</MudText>

<MudTable Dense="true" Hover="true" Breakpoint="Breakpoint.Sm" LoadingProgressColor="Color.Info" ServerData="@(new Func<TableState, Task<TableData<Patient>>>(ServerReload))">
    <HeaderContent>
        <MudTh>Id</MudTh>
        <MudTh>Name</MudTh>
        <MudTh>Birth Date</MudTh>
        <MudTh>Gender</MudTh>
        <MudTh>MRN</MudTh>
        <MudTh>Last Updated</MudTh>
        <MudTh>Patient Record</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id">@context.Id</MudTd>
        <MudTd DataLabel="Name">@context.DisplayName()</MudTd>
        <MudTd DataLabel="BirthDate">@context.BirthDate</MudTd>
        <MudTd DataLabel="Gender">@context.Gender</MudTd>
        <MudTd DataLabel="MRN">@(string.Join(", ", context.MedicalRecordNumbers()))</MudTd>
            <MudTd DataLabel="LastUpdated">@context.Meta?.LastUpdated</MudTd>
            <MudTd>
                <MudButton Size="Size.Small" Variant="Variant.Outlined" Color="Color.Secondary"
                           EndIcon="@Icons.Material.Filled.ContactPage"
                           Href="@($"/servers/{FhirServerNameSlug}/patients/{context.Id}")" Target="_blank">
                    View Record
                </MudButton>
            </MudTd>
        </RowTemplate>
        <NoRecordsContent>
            <MudText>No matching records found</MudText>
        </NoRecordsContent>
        <LoadingContent>
            <MudText>Loading...</MudText>
        </LoadingContent>
        <PagerContent>
            <MudTablePager HideRowsPerPage="true" HidePageNumber="true" LastIcon="null" FirstIcon="null" BeforeIcon="null" />
        </PagerContent>
    </MudTable>

@code {
    [Parameter]
    public string? FhirServerNameSlug { get; set; }
    private Bundle? currentPage = null;

    private async Task<TableData<Patient>> ServerReload(TableState state)
    {
        if (FhirServerNameSlug is null)
        {
            throw new InvalidOperationException("Requested patient browser without server name set.");
        }

        var bundle = await FhirService.GetPatientsAsync(FhirServerNameSlug, currentPage);

        currentPage = bundle;

        var patients = bundle.Entry.Select(entry => entry.Resource).Cast<Patient>().ToList();

        var totalItems = int.MaxValue;
        if (bundle.NextLink is null)
        {
            // if there are no more pages after this one, we disable the next button
            // by setting the totalItems to the number of items returned.
            totalItems = patients.Count;
        }

        return new TableData<Patient>() { Items = patients, TotalItems = totalItems };
    }
}
