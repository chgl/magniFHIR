@using magniFHIR.Pages.PatientBrowser;
@using magniFHIR.Data

@inherits TestContext

@code
{
    [Fact]
    public void RendersEmptyWithEmptyPatientList()
    {
        var fakeFhirService = A.Fake<IFhirService>();
        A.CallTo(() => fakeFhirService.GetPatientsAsync(A<string>._))
        .Returns(System.Threading.Tasks.Task.FromResult(new Bundle()));

        Services.AddSingleton<IFhirService>(fakeFhirService);

        var cut = RenderComponent<PatientBrowser>(parameters => parameters.Add(p => p.FhirServerNameSlug, "test"));

        var tableRows = cut.FindAll("th.mud-table-empty-row");

        tableRows.Should().NotBeEmpty();
    }

    [Fact]
    public void RendersEmptyRowWithPatientWithEverythingUnset()
    {
        var emptyPatient = new Patient();
        var bundle = new Bundle();
        bundle.AddResourceEntry(emptyPatient, "Patient/1");

        var fakeFhirService = A.Fake<IFhirService>();
        A.CallTo(() => fakeFhirService.GetPatientsAsync(A<string>._))
          .Returns(System.Threading.Tasks.Task.FromResult(bundle));

        Services.AddSingleton<IFhirService>(fakeFhirService);

        var cut = RenderComponent<PatientBrowser>(parameters => parameters.Add(p => p.FhirServerNameSlug, "test"));

        var tableRows = cut.FindAll("table > tbody > tr");

        tableRows.Should().HaveCount(1);
    }
}
